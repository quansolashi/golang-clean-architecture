basePath: /api/v1
definitions:
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  response.Auth:
    properties:
      email:
        type: string
      id:
        type: integer
      token:
        type: string
    type: object
  response.AuthResponse:
    properties:
      auth:
        $ref: '#/definitions/response.Auth'
    type: object
  response.User:
    properties:
      email:
        type: string
      id:
        type: integer
    type: object
  response.UserResponse:
    properties:
      user:
        $ref: '#/definitions/response.User'
    type: object
  response.UsersResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/response.User'
        type: array
    type: object
  util.ErrorResponse:
    properties:
      detail:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
info:
  contact: {}
  description: Clean Architecture API.
  title: Clean Architecture API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: login request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: login
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: list users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: user index
      tags:
      - User
  /users/{userId}:
    get:
      consumes:
      - application/json
      description: detail user
      parameters:
      - description: User ID
        format: int64
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get user
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
